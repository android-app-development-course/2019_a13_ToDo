<resources>

    <!-- Base application theme. parent="Theme.AppCompat.Light.DarkActionBar"-->
    <style name="AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>
    <style name="BlueAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/bluecolorPrimary</item>
        <item name="colorPrimaryDark">@color/bluecolorPrimaryDark</item>
        <item name="colorAccent">@color/bluecolorAccent</item>
        <!--        <item name="android:themecolor">@color/white</item>-->

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <style name="PinkAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/pinkcolorPrimary</item>
        <item name="colorPrimaryDark">@color/pinkcolorPrimaryDark</item>
        <item name="colorAccent">@color/pinkcolorAccent</item>
        <item name="android:textColorPrimary">@color/white</item>

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <style name="GreenAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/greencolorPrimary</item>
        <item name="colorPrimaryDark">@color/greencolorPrimaryDark</item>
        <item name="colorAccent">@color/greencolorAccent</item>
        <item name="android:textColorPrimary">@color/white</item>

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <style name="PurpleAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/purplecolorPrimary</item>
        <item name="colorPrimaryDark">@color/purplecolorPrimaryDark</item>
        <item name="colorAccent">@color/purplecolorAccent</item>
        <item name="android:textColorPrimary">@color/white</item>

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>

    <style name="BronzeAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/bronzecolorPrimary</item>
        <item name="colorPrimaryDark">@color/bronzecolorPrimaryDark</item>
        <item name="colorAccent">@color/bronzecolorAccent</item>
        <item name="android:textColorPrimary">@color/white</item>

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>


    <style name="OrAppTheme" parent="Theme.AppCompat.Light.NoActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/orcolorPrimary</item>
        <item name="colorPrimaryDark">@color/orcolorPrimaryDark</item>
        <item name="colorAccent">@color/orcolorAccent</item>
        <item name="android:textColorPrimary">@color/white</item>

        <item name="actionOverflowMenuStyle">@style/OverflowMenuStyle</item>
    </style>


    <style name="Font_family_light" parent="AppTheme">
        <item name="android:fontFamily">sans-serif-light</item>
    </style>

    <style name="Font_family_regular" parent="AppTheme">
        <item name="android:fontFamily">sans-serif-regular</item>
    </style>

    <!--popupwindows动画-->
    <style name="pop_animation" parent="android:Animation">
        <item name="android:windowEnterAnimation">@anim/pop_in</item>
        <item name="android:windowExitAnimation">@anim/pop_out</item>
    </style>

    <!--动画-->
    <style name="mypopwindow_anim_style">
        <item name="android:windowEnterAnimation">@anim/button_in</item>
        <!-- 指定显示的动画xml -->

        <item name="android:windowExitAnimation">@anim/button_out</item>
        <!-- 指定消失的动画xml -->
    </style>

    <!--自定义 popup 样式-->
    <style name="OverflowMenuStyle" parent="@style/Widget.AppCompat.PopupMenu.Overflow">
        <!-- 是否覆盖锚点，默认为true，即盖住Toolbar -->
        <item name="overlapAnchor">false</item>
        <!-- 弹出层背景颜色 -->
        <item name="android:popupBackground">@color/white</item>
        <!-- 弹出层垂直方向上的偏移，即在竖直方向上距离Toolbar的距离，值为负则会盖住Toolbar -->
        <item name="android:dropDownVerticalOffset">5dp</item>
        <!-- 弹出层水平方向上的偏移，即距离屏幕左边的距离，负值会导致右边出现空隙 -->
        <item name="android:dropDownHorizontalOffset">-2dp</item>
    </style>

    <!-- 选择框自定义主题 -->
    <style name="select_style">
        <item name="android:layout_width">60dip</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginLeft">4dip</item>
        <item name="android:layout_marginRight">4dip</item>
        <item name="android:paddingTop">4dip</item>
        <item name="android:paddingBottom">4dip</item>
        <item name="android:background">@drawable/select_selector</item>
        <item name="android:button">@null</item>
        <item name="android:gravity">center</item>
        <item name="android:textSize">13sp</item>
        <item name="android:textColor">@drawable/txt_select_selector</item>
    </style>

</resources>
